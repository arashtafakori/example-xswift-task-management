@using Module.Presentation.WebMVCApp.Controllers;
@model Module.Presentation.WebMVCApp.ViewModels.ArchiveTheProjectViewModel;

@{
    ViewData["Title"] = "Archive The Project";
}

<h4>@ViewData["Title"]</h4>

<hr />
<div>
    <form asp-action="@nameof(Projects.ArchivingConfirmed)">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="ProjectInfo!.Id" />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ProjectInfo!.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ProjectInfo!.Name)
            </dd>
        </dl>
        <p></p>
        @{
            if (Model.IssuesOfArchivingPossibility != null)
            {
                <table class="table">
                    <tbody>
                        @foreach (var item in Model.IssuesOfArchivingPossibility)
                        {
                            <tr>
                                <td style="color: lightcoral;">
                                    @Html.DisplayFor(modelItem => item.Description)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }
        <h6>Are you sure you want to archive the project?</h6>
        <p></p>
        <div class="form-group">
            <input type="submit" value="Confirm" class="btn btn-primary" />
            @Html.ActionLink("Cancel", 
            nameof(Projects.GetInfoList),
            null, null, new { @class="btn btn-light"})
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}