@using XSwift.Mvc;
@using Presentation.WebMVCApp.Controllers;
@model Presentation.WebMVCApp.ViewModels.GetProjectInfoListViewModel;

@{
    ViewData["Title"] = "Projects";
}

<h4>@ViewData["Title"]</h4>

<hr />
@if (User.IsInRole(
               Presentation.Configuration.AuthDefinitions.Roles.Admin))
{
    <p>
        <a asp-action="@nameof(Projects.DefineAProject)">Define A New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProjectInfoList.Items.FirstOrDefault()!.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ProjectInfoList.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a asp-action="@nameof(Projects.GetTheProjectInfo)" asp-route-projectId="@item.Id">Info</a>
                    <span> | </span>
                    <a asp-controller="@nameof(Tasks)" asp-action="@nameof(Tasks.GetTaskInfoList)" asp-route-projectId="@item.Id">Board</a>
                    <span> | </span>
                    <a asp-controller="@nameof(Sprints)" asp-action="@nameof(Sprints.GetSprintInfoList)" asp-route-projectId="@item.Id">Sprints</a>

                    @if (User.IsInRole(
                        Presentation.Configuration.AuthDefinitions.Roles.Admin))
                    {
                        <span> | </span>
                        <a asp-action="@nameof(Projects.ChangeTheProjectName)" asp-route-projectId="@item.Id">Edit</a>
                        <span> | </span>
                        <a asp-action="@nameof(Projects.ArchiveTheProject)" asp-route-projectId="@item.Id">Archive</a>
                        <span> | </span>
                        <a asp-action="@nameof(Projects.DeleteTheProject)" asp-route-projectId="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>