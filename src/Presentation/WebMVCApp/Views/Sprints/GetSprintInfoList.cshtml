@using CoreX.Mvc;
@using Domain.ProjectAggregation;
@using Presentation.WebMVCApp.Controllers;
@model Presentation.WebMVCApp.ViewModels.GetSprintInfoListViewModel;

@{
    ViewData["Title"] = "Sprints";
}

<h4>@ViewData["Title"] of the @Model.ProjectInfo!.Name project</h4>

<hr />
<p>
    <a asp-action="@nameof(Sprints.DefineASprint)"
       asp-route-projectId="@Model.ProjectInfo.Id">Define A New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SprintInfoList.Items.FirstOrDefault()!.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SprintInfoList.Items.FirstOrDefault()!.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SprintInfoList.Items.FirstOrDefault()!.EndDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.SprintInfoList.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    <a asp-action="@nameof(Sprints.GetTheSprintInfo)" asp-route-id="@item.Id">Info</a> |
                    <a asp-action="@nameof(Sprints.ChangeTheSprintName)" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="@nameof(Sprints.ChangeTheSprintTimeSpan)" asp-route-id="@item.Id">Time span</a> |
                    <a asp-action="@nameof(Sprints.ArchiveTheSprint)" asp-route-id="@item.Id">Archive</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-controller="@nameof(Projects)"
       asp-action="@nameof(Projects.GetProjectInfoList)">Back to List</a>
</div>