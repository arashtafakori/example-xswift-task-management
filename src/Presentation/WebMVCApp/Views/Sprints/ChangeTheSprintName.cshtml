@using Module.Domain.ProjectAggregation;
@using Module.Presentation.WebMVCApp.Controllers;
@model Module.Presentation.WebMVCApp.ViewModels.ChangeTheSprintNameViewModel

@{
    ViewData["Title"] = "Change The Sprint Name";
}

<h3>@ViewData["Title"]</h3>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="@nameof(Sprints.ChangingTheSprintNameConfirmed)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" name="projectId" asp-for="SprintInfo!.ProjectId" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <p></p>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Cancel",
                nameof(Sprints.GetSprintInfoList),
                null, routeValues: new {projectId = @Model.SprintInfo!.ProjectId},
                new { @class="btn btn-light"})
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}