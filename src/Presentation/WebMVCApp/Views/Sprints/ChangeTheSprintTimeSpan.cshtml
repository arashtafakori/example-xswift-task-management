@using Domain.SprintAggregation;
@using Domain.ProjectAggregation;
@model MVCWebApp.Model.ViewModelAsChangeTheSprintTimeSpan

@{
    ViewData["Title"] = "Change The Sprint Time Span";
    var sprintInfo = ViewData[nameof(SprintInfo)] as SprintInfo;
    var projectInfo = ViewData[nameof(ProjectInfo)] as ProjectInfo;
}

<h4>@ViewData["Title"]</h4>

<hr />
<div class="row">
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => sprintInfo!.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => sprintInfo!.Name)
        </dd>
    </dl>
    <div class="col-md-4">
        <form asp-action="ChangeTheSprintTimeSpan">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" name="projectId" asp-for="@projectInfo!.Id" />

            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                <input asp-for="StartDate" type="date" class="datefield" id="@nameof(@Model.StartDate)" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <p></p>

            <div class="form-group">
                <label asp-for="EndDate" class="control-label"></label>
                <input asp-for="EndDate" type="date" class="datefield" id="@nameof(@Model.EndDate)" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <p></p>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="GetSomeSprintInfo" asp-route-projectId="@projectInfo!.Id">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}