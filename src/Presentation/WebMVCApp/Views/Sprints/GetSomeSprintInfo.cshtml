@using Domain.ProjectAggregation;
@model IEnumerable<Domain.SprintAggregation.SprintInfo>

@{
    ViewData["Title"] = "Sprints";
    var projectInfo = ViewData[nameof(ProjectInfo)] as ProjectInfo;
}


<h4>@ViewData["Title"] of the @projectInfo!.Name project</h4>

<hr />
<p>
    <a asp-action="DefineANewSprint"
       asp-route-projectId="@projectInfo!.Id">Define A New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    <a asp-action="ChangeTheSprintName" asp-route-id="@item.Id">Name</a> |
                    <a asp-action="ChangeTheSprintTimeSpan" asp-route-id="@item.Id">Time span</a> |
                    <a asp-action="GetTheSprintInfo" asp-route-id="@item.Id">Info</a> |
                    <a asp-action="ArchiveTheSprint" asp-route-id="@item.Id">Archive</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-controller="Projects" asp-action="GetSomeProjectInfo">Back to List</a>
</div>