@using Module.Domain.ProjectAggregation;
@using Module.Domain.SprintAggregation;
@using Module.Presentation.WebMVCApp.Controllers;
@using XSwift.Mvc;
@model Module.Presentation.WebMVCApp.ViewModels.AddATaskViewModel

@{
    ViewData["Title"] = "Add A New Task";
}

<h4>@ViewData["Title"] to the @Model.ProjectInfo!.Name project</h4>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="@nameof(Tasks.AddingConfirmed)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ProjectId" />
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                @Html.TextAreaFor(m => m.Description,
                    new { @class = "form-control" , @cols="20" , @rows="4" })
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <p></p>
            <label asp-for="Status" class="control-label"></label>
            @Html.DropDownListFor(
                model => model.Status,
            Model.TaskStatusSelectListItems,
            new { @class = "form-control", disabled = "disabled"  })
            <p></p>
            <label asp-for="SprintId" class="control-label"></label>
            @Html.DropDownListFor(
                model => model.SprintId ,
            Model.SprintsInfoItems,
            "<Select a sprint>",
            new { @class = "form-control"})
            <p></p>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Cancel", nameof(Tasks.GetTaskInfoList), null,
                routeValues: new {projectId = @Model.ProjectInfo.Id},
                new { @class="btn btn-light"})
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}